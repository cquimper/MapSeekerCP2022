%    The contents of this file are subject to the Mozilla Public License
%    Version  1.1  (the "License"); you may not use this file except in
%    compliance with the License. You may obtain a copy of the License at:
%
%    http://www.mozilla.org/MPL/
%
%    Software  distributed  under  the License is distributed on an "AS
%    IS"  basis,  WITHOUT  WARRANTY  OF  ANY  KIND,  either  express or
%    implied.
%
% Purpose: Compute meta metadata from the metadata in order to find:
%  . size (maximum number of vertices) from which we acquire conjectures (as want to use the smallest possible size for which reached fixed point)
% Author : Nicolas Beldiceanu, IMT Atlantique

:- use_module(library(lists)).
:- use_module(library(clpfd)).
:- use_module(tables).
:- use_module(table_access).
:- use_module(utility).              
:- use_module(gen_candidate_tables).

top(X2, X1) :- 
    X1 > 0,
    !,
    atoms_concat(['data/',X2,'/meta_metadata_',X2,'.pl'], 
                 X3),                                             
    open(X3, write, X4),                         
    format(X4, '% Purpose: Meta metadata generated by gen_meta_metadata.pl in order to select which size to use when acquiring a conjecture:~n', []),
    format(X4, '%          generate facts of the following form~n', []),
    format(X4, '%           size_to_compute_conjectures(Table, FixPointSize, SizeToUse, NbRowsSizeToUse)~n', []),
    format(X4, '% Author : Nicolas Beldiceanu, IMT Atlantique~n~n', []),
    format(X4, ':- dynamic size_to_compute_conjectures/4.~n~n', []),
    gen_meta_metadata(X2, X1, X4), 
    close(X4).
top(X4, X1) :- 
    X1 < 0,
    X2 is -X1,
    gen_candidate_tables(X5, X4, _, _, _), 
    consult_metadata(X4, X2, X2, X5), 
    extract_interesting_metadata(X5),
    false.
top(_, _). 

extract_interesting_metadata(X25) :-
    get_metadata_arity(X35),
    get_metadata_attributes(X13),
    functor(X8, table_metadata, X35),
    memberchk(X11-table_name,  X13),
    memberchk(X12-nb_columns,  X13),
    memberchk(X17-nb_rows,        X13),
    memberchk(X20-col_names,       X13),
    memberchk(X21-kinds,           X13),
    memberchk(X26-mins,             X13),
    memberchk(X27-maxs,             X13),
    memberchk(X22-types,           X13),
    memberchk(X23-nvals,           X13),
    memberchk(X28-gcds,             X13),
    memberchk(X14-maxoccs,       X13),
    memberchk(X9-maxoccvals, X13),
    memberchk(X32-pks,               X13),
    memberchk(X10-affinities, X13),
    arg(X11,  X8, X25),
    arg(X12,  X8, X18),
    arg(X17,     X8, X33),
    arg(X20,      X8, X36),
    arg(X21,      X8, X37),
    arg(X26,       X8, X41),
    arg(X27,       X8, X42),
    arg(X22,      X8, X38),
    arg(X23,      X8, X39),
    arg(X28,       X8, X43),
    arg(X14,    X8, X29),
    arg(X9, X8, X15),
    arg(X32,        X8, X46),
    arg(X10, X8, X16),
    call(X8),
    (X46 = [] ->
        true
    ;
        true
    ),
    X30 is X33 - X33 // 9,
    findall(t(X44,X34,X19), (X50 in 1..X18, indomain(X50),
                                       arg(X50, X36, X44),
                                       arg(X50, X38, bool),
                                       arg(X50, X37, X45), X45 \= primary,
                                       arg(X50, X29, X34),
                                       X34 >= X30,
                                       arg(X50, X15, X19)), X6),
    (X6 = [] ->
        true
    ;
      write(X25), write(' meaningfull Boolean value'), write(' (nb_rows='), write(X33), write('):'), nl,
      write(X6), nl, nl
    ),
    findall(t(X44,X47,X48), (X50 in 1..X18, indomain(X50),
                              arg(X50, X36, X44),
                              arg(X50, X38, int),
                              arg(X50, X37, X45), X45 \= primary,
                              arg(X50, X39, 2),
                              arg(X50, X41,  X47),
                              arg(X50, X42,  X48),
                              X40 is X48-X47+1,
                              X40 = 2), X3),
    (X3 = [] ->
        true
    ;
      write(X25), write(' two values but not Boolean:'), nl,
      write(X3), nl, nl
    ),
    findall(t(X44,X47,X48), (X50 in 1..X18, indomain(X50),
                              arg(X50, X36, X44),
                              arg(X50, X38, int),
                              arg(X50, X37, X45), X45 \= primary,
                              arg(X50, X39, 3),
                              arg(X50, X41,  X47),
                              arg(X50, X42,  X48),
                              X40 is X48-X47+1,
                              X40 = 3), X4),
     (X4 = [] ->
        true
    ;
      write(X25), write(' three values:'), nl,
      write(X4), nl, nl
    ),
    findall(t(X44,X47,X48), (X50 in 1..X18, indomain(X50),
                              arg(X50, X36, X44),
                              arg(X50, X38, int),
                              arg(X50, X37, X45), X45 \= primary,
                              arg(X50, X39, 4),
                              arg(X50, X41,  X47),
                              arg(X50, X42,  X48),
                              X40 is X48-X47+1,
                              X40 = 4), X5),
     (X5 = [] ->
        true
    ;
      write(X25), write(' four values:'), nl,
      write(X5), nl, nl
    ),
    X31 is X33 // 2,
    findall(t(X50,X34,X19), (X50 in 1..X18, indomain(X50),
                                    arg(X50, X38, int),
                                    arg(X50, X37, X45), X45 \= primary,
                                    arg(X50, X29, X34),
                                    X34 >= X31, arg(X50, X15, X19)), X2),
    (X2 = [] ->
        true
    ;
        true
    ),
    findall(X50-X49, (X50 in 1..X18, indomain(X50),
                    arg(X50, X43, X49),
                    X49 > 1                       ), X7),
    (X7 = [] ->
        true
    ;
        true
    ),
    findall(X50-X24, (X50 in 1..X18, indomain(X50),
                         arg(X50, X16, X24),
                         X24 \= none              ), X1),
    (X1 = [] ->
        true
    ;
        true
    ).

gen_meta_metadata(X6, X3, X10) :- 
    get_metadata_arity(X9),                              
    get_tables(X6, _, _, _, X8), 
    sort(X8, X4),                             
    member(X7, X4),                          
    functor(X11, table_metadata, X9),                   
    retractall(X11),                                       
    consult_metadata(X6, 2, X3, X7), 
    identify_fix_point_metadata(X3, X7, X1),
    get_size_wrt_limits(X7, X1, 2, X3, 200, 10000, init, X2, X5),
    format(X10,'size_to_compute_conjectures(~w,~w,~w,~w).~n',[X7,X1,X5,X2]),
    false.
gen_meta_metadata(_, _, _). 

identify_fix_point_metadata(2, _, 2) :- !.
identify_fix_point_metadata(X4, X2, X1) :-
    X4 > 2,
    (check_if_not_reached_fix_point(X4, X2) ->
        X3 is X4-1,
        identify_fix_point_metadata(X3, X2, X1)
    ;
        X1 = X4
    ).

check_if_not_reached_fix_point(X26, X14) :-
    get_metadata_attributes(X7),
    memberchk(X4-table_name,       X7),
    memberchk(X15-max_n,                 X7),
    memberchk(X5-nb_columns,       X7),
    memberchk(X12-types,                X7),
    memberchk(X16-gcds,                  X7),
    memberchk(X9-equals,              X7),
    memberchk(X19-fds,                    X7),
    memberchk(X13-nb_fds,               X7),
    memberchk(X17-cmps,                  X7),
    memberchk(X10-nb_cmps,             X7),
    memberchk(X2-distinct_vals, X7), 
    memberchk(X8-vals_fds,           X7), 
    X22 is X26-1,
    get_metadata_arity(X23),
    functor(X3,     table_metadata, X23),
    functor(X1, table_metadata, X23),
    arg(X4,    X3,     X14),
    arg(X4,    X1, X14),
    arg(X15,         X3,     X26),
    arg(X15,         X1, X22),
    arg(X5,    X3,     X11),
    arg(X5,    X1, X11),
    arg(X12,        X3,     X24),
    arg(X12,        X1, X24),
    arg(X16,         X3,     X27),
    arg(X16,         X1, X27),
    arg(X9,       X3,     X20),
    arg(X9,       X1, X20),
    arg(X19,          X3,     X29),
    arg(X19,          X1, X29),
    arg(X13,        X3,     X25),
    arg(X13,        X1, X25),
    arg(X17,         X3,     X28),
    arg(X17,         X1, X28),
    arg(X10,       X3,     X21),
    arg(X10,       X1, X21),
    arg(X2, X3,     X6), 
    arg(X2, X1, X6), 
    arg(X8,      X3,     X18),      
    arg(X8,      X1, X18),      
    call(X3),
    call(X1).

get_size_wrt_limits(X10, X18, X11, X12, X4, X5, X13, X6, X14) :-
    get_metadata_arity(X17),
    get_metadata_attributes(X3),
    memberchk(X2-table_name, X3),
    memberchk(X15-max_n,           X3),
    memberchk(X7-nb_rows,       X3),
    functor(X1, table_metadata, X17),
    arg(X2, X1, X10),
    arg(X15,      X1, X18),
    arg(X7,    X1, X16),
    call(X1),
    X8 is X18+1,
    X9 is X18-1,
    ((X16<X4, X18=X12)               ->
        X14 = X18, X6 = X16                                                                      ;
     (X16>X5, X18=X11)               ->
        X14 = X18, X6 = X16                                                                      ;
     (X16<X4, X18<X12, X13\=dec) ->
        get_size_wrt_limits(X10, X8, X11, X12, X4, X5, inc, X6, X14) ;
     (X16>X5, X18>X11, X13\=inc) ->
        get_size_wrt_limits(X10, X9, X11, X12, X4, X5, dec, X6, X14) ;
        X14 = X18, X6 = X16                                                                      ).

consult_metadata(X4, X1, X2, X7) :- 
    X8 in X1..X2,
    indomain(X8),                                              
    number_codes(X8, X5),                               
    atom_codes(X6, X5),                             
    atoms_concat(['data/',X4,                             
                  '/data',                                       
                  X6,'/',                                  
                  X7,                                       
                  '_metadata.pl'], X3), 
    consult(X3),
    false.
consult_metadata(_, _, _, _). 
